# Generated by Django 5.2.1 on 2025-05-29 10:30

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Время обновления"
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "kinescope_video_id",
                    models.CharField(
                        blank=True,
                        help_text="Идентификатор события в Kinescope. Создается автоматически после создания урока.",
                        max_length=64,
                        null=True,
                        verbose_name="ID события Kinescope",
                    ),
                ),
                ("content", models.TextField(verbose_name="Содержание")),
                ("opens_at", models.DateField(verbose_name="Когда открывается")),
            ],
            options={
                "verbose_name": "Урок",
                "verbose_name_plural": "Уроки",
                "db_table": "lesson",
            },
        ),
        migrations.CreateModel(
            name="LessonFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Время обновления"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "file",
                    models.FileField(upload_to="files/lessons", verbose_name="Файл"),
                ),
            ],
            options={
                "verbose_name": "Файл урока",
                "verbose_name_plural": "Файлы урока",
                "db_table": "lesson_file",
            },
        ),
        migrations.CreateModel(
            name="UserLesson",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Время обновления"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "not_started"),
                            ("started", "started"),
                            ("completed", "completed"),
                            ("tasks_completed", "tasks_completed"),
                        ],
                        default="not_started",
                        max_length=15,
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("complete_tasks_deadline", models.DateTimeField()),
            ],
            options={
                "verbose_name": "Урок пользователя",
                "verbose_name_plural": "Уроки пользователя",
                "db_table": "user_lesson",
                "ordering": ("lesson__opens_at", "status", "created_at"),
            },
        ),
    ]
